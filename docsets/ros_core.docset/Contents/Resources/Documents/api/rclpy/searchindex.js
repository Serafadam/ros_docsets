Search.setIndex({"docnames": ["about", "api", "api/actions", "api/context", "api/execution_and_callbacks", "api/init_shutdown", "api/logging", "api/node", "api/parameters", "api/qos", "api/services", "api/timers", "api/topics", "api/utilities", "examples", "index"], "filenames": ["about.rst", "api.rst", "api/actions.rst", "api/context.rst", "api/execution_and_callbacks.rst", "api/init_shutdown.rst", "api/logging.rst", "api/node.rst", "api/parameters.rst", "api/qos.rst", "api/services.rst", "api/timers.rst", "api/topics.rst", "api/utilities.rst", "examples.rst", "index.rst"], "titles": ["About", "API", "Actions", "Context", "Execution and Callbacks", "Initialization, Shutdown, and Spinning", "Logging", "Node", "Parameters", "Quality of Service", "Services", "Timer", "Topics", "Utilities", "Examples", "rclpy"], "terms": {"The": [0, 2, 4, 5, 7, 8, 10, 12, 13], "canon": [0, 15], "python": [0, 8, 13, 15], "api": [0, 15], "ro": [0, 2, 3, 5, 7, 10, 12, 15], "2": [0, 2, 8, 9, 15], "rclpy": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "i": [0, 2, 4, 5, 7, 8, 9, 10, 12], "built": 0, "common": [0, 5], "c": [0, 6], "provid": [0, 2, 5, 7, 9, 10, 12, 15], "rcl": [0, 13], "initi": [1, 3, 6, 7, 9, 15], "shutdown": [1, 3, 4, 6, 13, 15], "spin": [1, 4, 15], "create_nod": [1, 5, 15], "get_global_executor": [1, 5, 15], "init": [1, 3, 5, 15], "spin_onc": [1, 4, 5, 15], "spin_until_future_complet": [1, 4, 5, 15], "node": [1, 2, 4, 5, 8, 10, 12, 15], "topic": [1, 2, 5, 7, 15], "publish": [1, 2, 5, 7, 9, 15], "subscript": [1, 4, 5, 7, 9, 15], "servic": [1, 2, 4, 5, 7, 12, 15], "client": [1, 4, 7, 15], "action": [1, 5, 7, 9, 15], "server": [1, 7, 10, 15], "timer": [1, 4, 7, 15], "rate": [1, 7, 11, 15], "paramet": [1, 2, 3, 4, 5, 7, 9, 10, 12, 13, 15], "log": [1, 5, 7, 15], "clear_config": [1, 6, 15], "get_logg": [1, 6, 7, 15], "get_logger_effective_level": [1, 6, 15], "get_logging_directori": [1, 6, 15], "get_logging_severity_from_str": [1, 6, 15], "set_logger_level": [1, 6, 15], "context": [1, 4, 5, 7, 10, 11, 13, 15], "execut": [1, 2, 5, 10, 15], "callback": [1, 2, 3, 5, 7, 10, 11, 12, 15], "executor": [1, 5, 7, 15], "group": [1, 2, 7, 10, 12, 15], "util": [1, 9, 11, 15], "get_available_rmw_implement": [1, 13, 15], "get_default_context": [1, 5, 13, 15], "get_rmw_implementation_identifi": [1, 13, 15], "ok": [1, 3, 13, 15], "remove_ros_arg": [1, 13, 15], "timeout_sec_to_nsec": [1, 13, 15], "try_shutdown": [1, 3, 13, 15], "qualiti": [1, 7, 10, 12, 15], "durabilitypolici": [1, 9, 15], "historypolici": [1, 9, 15], "invalidqosprofileexcept": [1, 9, 15], "livelinesspolici": [1, 9, 15], "qosdurabilitypolici": [1, 9, 15], "qoshistorypolici": [1, 9, 15], "qoslivelinesspolici": [1, 9, 15], "qospolicyenum": [1, 9, 15], "qospolicykind": [1, 9, 15], "qospresetprofil": [1, 9, 15], "qosprofil": [1, 2, 7, 9, 10, 12, 15], "qosreliabilitypolici": [1, 9, 15], "reliabilitypolici": [1, 9, 15], "qos_check_compat": [1, 9, 15], "qos_policy_name_from_kind": [1, 9, 15], "qos_profile_action_status_default": [1, 9, 15], "qos_profile_parameter_ev": [1, 9, 15], "qos_profile_paramet": [1, 9, 15], "qos_profile_sensor_data": [1, 9, 15], "qos_profile_services_default": [1, 9, 15], "qos_profile_system_default": [1, 9, 15], "qos_profile_unknown": [1, 9, 15], "class": [2, 3, 4, 7, 8, 9, 10, 11, 12], "actioncli": 2, "action_typ": 2, "action_nam": 2, "callback_group": [2, 4, 7, 10, 11, 12], "none": [2, 3, 4, 5, 7, 8, 10, 11, 12, 13], "goal_service_qos_profil": 2, "qo": [2, 7, 9, 12], "object": [2, 3, 5, 7, 8, 9, 10, 12], "result_service_qos_profil": 2, "cancel_service_qos_profil": 2, "feedback_sub_qos_profil": 2, "status_sub_qos_profil": 2, "creat": [2, 4, 5, 7, 10, 12], "an": [2, 4, 5, 7, 8, 9, 10, 12, 13], "add": [2, 3, 4, 5, 7], "type": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13], "name": [2, 5, 6, 7, 8, 9, 10, 12, 13], "us": [2, 4, 5, 6, 7, 9, 10, 12, 13], "part": [2, 7, 9], "underli": [2, 7, 10, 12], "If": [2, 4, 5, 7, 9, 10, 12], "": [2, 4, 7, 12], "default": [2, 4, 5, 7, 9, 10, 12, 13], "profil": [2, 7, 9, 10, 12], "goal": 2, "result": [2, 7, 10, 13], "cancel": [2, 11], "feedback": 2, "subscrib": [2, 7, 12], "statu": 2, "add_to_wait_set": 2, "wait_set": 2, "entiti": [2, 4, 5, 7], "wait": [2, 4, 5, 7, 10, 12, 13], "set": [2, 7, 9, 12, 13], "destroi": [2, 3, 4, 7, 10, 11, 12], "handl": [2, 3, 7, 10, 11, 12], "async": [2, 4], "taken_data": 2, "work": [2, 4, 5], "after": [2, 4, 5, 7, 12], "data": [2, 9, 12], "ha": [2, 4, 5, 7, 8, 12], "been": [2, 3, 4, 7, 12], "taken": [2, 7, 11], "from": [2, 4, 5, 7, 8, 9, 10, 11], "readi": [2, 4, 5, 10], "thi": [2, 3, 4, 5, 7, 9, 10, 11, 12, 13], "futur": [2, 4, 5, 10], "ani": [2, 4, 5, 7, 9], "receiv": [2, 4, 7, 10, 12], "respons": [2, 4, 10], "call": [2, 3, 4, 5, 7, 10, 11, 12], "user": [2, 7, 10, 12], "defin": [2, 4, 7, 9, 12], "e": [2, 5, 6, 7], "g": [2, 5, 6, 7], "get_num_ent": 2, "return": [2, 4, 5, 6, 7, 8, 9, 10, 12, 13], "number": [2, 4, 7, 10, 13], "each": [2, 7, 9], "is_readi": [2, 11], "true": [2, 3, 4, 5, 7, 10, 12], "one": [2, 4, 5, 7, 9], "more": [2, 5, 6], "ar": [2, 3, 4, 5, 7, 9], "send_goal": 2, "kwarg": [2, 4, 9], "send": [2, 10, 12], "do": [2, 9, 10], "method": [2, 4, 7, 10], "deadlock": [2, 10], "mai": [2, 7, 10, 11], "occur": [2, 4, 10], "see": [2, 5, 6, 7], "send_goal_async": 2, "info": 2, "about": [2, 15], "keyword": 2, "argument": [2, 3, 4, 5, 7, 9], "unlik": 2, "final": [2, 3], "request": [2, 7, 9, 10], "rais": [2, 4, 7, 8, 9, 10, 12], "typeerror": [2, 7, 8, 10, 12], "pass": [2, 4, 10, 12], "isn": [2, 10, 12], "t": [2, 3, 4, 5, 7, 9, 10, 12, 13], "instanc": [2, 4, 5, 7, 8, 10, 12], "when": [2, 4, 5, 7, 9, 10, 11, 12], "wa": [2, 4, 7, 8, 10, 12], "construct": [2, 9, 10, 12], "feedback_callback": 2, "goal_uuid": 2, "asynchron": 2, "get": [2, 3, 4, 7, 8, 9, 10, 12], "clientgoalhandl": 2, "receipt": 2, "acknowledg": [2, 12], "function": [2, 4, 5, 6, 7, 9, 12], "associ": [2, 4, 5, 7, 10], "univers": 2, "uniqu": 2, "identifi": [2, 10], "random": 2, "uuid": 2, "gener": [2, 4], "unique_identifier_msg": 2, "complet": [2, 4, 5, 10], "accept": 2, "reject": [2, 7], "task": [2, 4], "server_is_readi": 2, "check": [2, 3, 5, 8, 9, 10, 12], "process": [2, 4, 5, 7], "fals": [2, 4, 5, 7, 10, 12, 13], "otherwis": [2, 4, 7, 10, 12], "take_data": 2, "take": 2, "stuff": 2, "lower": 2, "level": [2, 6], "so": [2, 7, 9], "doesn": [2, 5, 9], "immedi": [2, 4, 12], "wake": [2, 4], "again": 2, "wait_for_serv": 2, "timeout_sec": [2, 4, 5, 10, 13], "sever": [2, 7], "soon": [2, 10], "second": [2, 4, 5, 7, 10, 13], "until": [2, 4, 5, 11, 12], "avail": [2, 13], "indefinit": [2, 12], "timeout": [2, 4, 5, 10, 12, 13], "exceed": 2, "action_cli": 2, "goal_id": 2, "goal_respons": 2, "properti": [2, 3, 4, 7, 8, 9, 10, 11, 12], "cancel_go": 2, "cancel_goal_async": 2, "respond": 2, "get_result": 2, "get_result_async": 2, "stamp": 2, "actionserv": 2, "execute_callback": 2, "goal_callback": 2, "default_goal_callback": 2, "handle_accepted_callback": 2, "default_handle_accepted_callback": 2, "cancel_callback": 2, "default_cancel_callback": 2, "feedback_pub_qos_profil": 2, "status_pub_qos_profil": 2, "result_timeout": 2, "900": 2, "servergoalhandl": 2, "being": [2, 6, 7], "track": 2, "new": [2, 7], "newli": [2, 5], "how": 2, "long": [2, 5], "kept": 2, "reach": 2, "termin": 2, "state": 2, "notify_execut": 2, "goal_handl": 2, "notify_goal_don": 2, "register_cancel_callback": 2, "regist": [2, 7, 13], "purpos": 2, "decid": 2, "go": 2, "queu": 2, "should": [2, 3, 4, 5, 7, 9, 10, 11, 12], "contain": [2, 7, 10, 12, 13], "must": [2, 4, 5, 12], "cancelrespons": 2, "valu": [2, 5, 7, 8, 9], "There": [2, 4], "can": [2, 4, 5, 7, 9, 13, 14], "onli": [2, 4, 7, 12], "per": 2, "therefor": 2, "replac": 2, "previous": [2, 5, 7], "unregist": 2, "register_execute_callback": 2, "finish": [2, 4, 5], "register_goal_callback": 2, "messag": [2, 7, 8, 12], "goalrespons": 2, "register_handle_accepted_callback": 2, "whenev": [2, 7], "expect": 2, "which": [2, 4, 5, 7], "repres": 2, "interact": [2, 15], "updat": 2, "defer": 2, "possibl": [2, 5, 8, 9], "1": [2, 4, 8, 9], "action_serv": 2, "goal_info": 2, "goal_request": 2, "given": [2, 3, 4, 5, 7, 8], "fail": [2, 7], "runtimeerror": [2, 7, 8, 13], "goalinfo": 2, "abort": 2, "is_act": 2, "is_cancel_request": 2, "publish_feedback": 2, "succe": 2, "cancel_request": 2, "No": 2, "all": [2, 4, 5, 7, 12, 13], "encapsul": 3, "lifecycl": 3, "reus": 3, "destructor": 3, "wrap": [3, 10, 12], "rcl_context_t": 3, "get_domain_id": 3, "domain": [3, 5], "id": [3, 5], "arg": [3, 4, 5, 7, 9, 13], "initialize_log": 3, "domain_id": [3, 5], "commun": [3, 5, 7, 9, 12], "option": [3, 4, 5, 7, 10], "list": [3, 4, 5, 7, 9, 10], "str": [3, 5, 7, 10, 12], "command": [3, 5, 7], "line": [3, 5, 7], "hasn": 3, "shut": [3, 4, 5], "down": [3, 4, 5], "on_shutdown": 3, "alreadi": [3, 7, 13], "two": [4, 7, 9], "compon": 4, "control": 4, "actual": [4, 9], "extend": 4, "enforc": 4, "concurr": 4, "rule": [4, 7], "callbackgroup": [4, 7, 10, 12], "except": [4, 7, 9], "conditionreachedexcept": 4, "base": [4, 8, 9], "thread": 4, "model": 4, "unit": 4, "like": [4, 5, 7], "A": [4, 5, 7, 8, 10, 11, 12], "custom": 4, "cleanup": 4, "also": [4, 5, 7], "global": [4, 5, 7, 13], "add_nod": 4, "whose": 4, "manag": 4, "bool": [4, 5, 7, 8, 9, 10, 12], "ad": [4, 7], "can_execut": 4, "determin": [4, 9], "typevar": [4, 7, 10, 12], "waitableentitytyp": 4, "guard": [4, 7], "condit": [4, 7], "etc": [4, 5, 7], "create_task": 4, "coroutin": [4, 5], "dure": [4, 5, 7], "union": [4, 7, 12], "callabl": [4, 7, 12], "run": [4, 7], "get_nod": 4, "have": [4, 7, 9], "remove_nod": 4, "stop": 4, "remov": [4, 7, 10], "float": [4, 5, 7, 10, 13], "block": [4, 5, 11, 12, 13], "forev": [4, 5, 10, 11, 13], "neg": [4, 5, 12, 13], "don": [4, 5, 13], "0": [4, 5, 8, 9, 12], "outstand": 4, "timeot": 4, "expir": [4, 5, 7, 10], "befor": [4, 5, 7, 12], "done": [4, 5, 10], "singl": 4, "wait_for_ready_callback": 4, "spin_once_until_future_complet": 4, "behav": 4, "same": [4, 9], "wai": 4, "need": [4, 7], "implement": [4, 13], "awak": 4, "other": [4, 5, 7, 9], "maximum": 4, "intern": 4, "_wait_for_ready_callback": 4, "lambda": 4, "yield": 4, "timeoutexcept": 4, "shutdownexcept": 4, "make": [4, 10], "evalu": 4, "tupl": [4, 7], "becaus": 4, "someth": [4, 7], "chang": [4, 7, 9], "tell": 4, "externalshutdownexcept": 4, "multithreadedexecutor": 4, "num_thread": 4, "pool": 4, "int": [4, 5, 7, 9, 10, 12, 13], "worker": 4, "multiprocess": 4, "cpu_count": 4, "signal": [4, 5], "singlethreadedexecutor": [4, 11], "await_or_execut": 4, "await": 4, "els": [4, 7], "allow": [4, 5, 7, 9], "instanti": [4, 5], "instead": [4, 10, 12], "beginning_execut": 4, "ending_execut": 4, "add_ent": 4, "waitabl": [4, 7], "permiss": 4, "begin": 4, "notifi": 4, "has_ent": 4, "mutuallyexclusivecallbackgroup": 4, "time": [4, 7, 12], "reentrantcallbackgroup": 4, "parallel": 4, "without": [4, 7, 12], "restrict": 4, "collect": 5, "write": 5, "program": 5, "typic": 5, "consist": 5, "follow": [5, 7, 9], "oper": [5, 7], "initit": 5, "particular": 5, "item": 5, "ie": 5, "invalid": [5, 7, 9], "deriv": 5, "node_nam": [5, 7], "cli_arg": [5, 7], "namespac": [5, 7], "use_global_argu": [5, 7], "enable_rosout": [5, 7], "start_parameter_servic": [5, 7], "parameter_overrid": [5, 7], "allow_undeclared_paramet": [5, 7], "automatically_declare_parameters_from_overrid": [5, 7], "give": [5, 7], "Being": 5, "specif": [5, 7, 13], "implicit": 5, "scope": 5, "flag": [5, 7], "alwai": 5, "preced": 5, "prefix": [5, 7], "appli": [5, 7, 10, 12], "ignor": [5, 7], "wide": [5, 7], "rosout": [5, 7], "overrid": [5, 7], "declar": [5, 7], "undeclar": [5, 7], "affect": [5, 7], "implicitli": [5, 7], "creation": [5, 7], "signal_handler_opt": 5, "signalhandleropt": 5, "indic": 5, "handler": [5, 7], "instal": 5, "sigint": 5, "sigterm": 5, "uninstall_handl": 5, "uninstal": 5, "won": [5, 7], "One": 5, "It": [5, 7], "than": [5, 12], "partial": 5, "clear": 6, "configur": 6, "system": [6, 7, 9, 12], "logger": [6, 7], "current": [6, 9], "directori": 6, "For": [6, 7, 9], "detail": 6, "rcl_logging_ret_t": 6, "rcl_logging_get_logging_directori": 6, "rcutils_allocator_t": 6, "char": 6, "path": [6, 13], "log_sever": 6, "graph": 7, "primari": [7, 12], "entrypoint": 7, "valid": 7, "validate_node_nam": 7, "string": [7, 8], "These": 7, "extract": 7, "remap": 7, "well": 7, "non": 7, "rel": 7, "validate_namespac": 7, "behavior": 7, "relat": 7, "param_rel_tol": 7, "1e": 7, "06": 7, "toler": 7, "point": [7, 13], "comparison": 7, "math": 7, "isclos": 7, "document": 7, "add_on_set_parameters_callback": 7, "front": 7, "self": 7, "_parameter_callback": 7, "consid": 7, "bad": 7, "practic": 7, "unknown": [7, 9], "prevent": [7, 10], "awar": 7, "them": 7, "setparametersresult": 7, "add_wait": 7, "capabl": 7, "thing": 7, "waitset": 7, "iter": 7, "count_publish": 7, "topic_nam": [7, 12], "privat": 7, "fulli": 7, "qualifi": 7, "expand": 7, "queri": 7, "count": 7, "count_subscrib": 7, "create_cli": [7, 10], "srv_type": [7, 10], "srv_name": [7, 10], "qos_profil": [7, 10, 12], "create_guard_condit": 7, "guardcondit": 7, "create_publish": [7, 12], "msg_type": [7, 12], "event_callback": [7, 12], "qos_overriding_opt": 7, "publisher_class": 7, "histori": [7, 9], "depth": [7, 9], "In": [7, 9], "case": [7, 9], "keep_last": [7, 9], "event": [7, 9], "publishereventcallback": 7, "middlewar": 7, "create_r": 7, "frequenc": 7, "clock": [7, 11], "hz": 7, "create_servic": [7, 10], "srvtyperequest": [7, 10], "srvtyperespons": [7, 10], "create_subscript": [7, 12], "raw": [7, 12], "msgtype": [7, 12], "subscriptioneventcallback": 7, "store": [7, 12], "binari": [7, 12], "represent": [7, 12], "create_tim": 7, "timer_period_sec": 7, "start": 7, "everi": 7, "period": [7, 12], "declare_paramet": 7, "descriptor": 7, "ignore_overrid": 7, "success": 7, "includ": [7, 13], "its": [7, 10], "parameterdescriptor": 7, "shall": 7, "account": 7, "effect": 7, "assign": 7, "parameteralreadydeclaredexcept": 7, "had": 7, "invalidparameterexcept": 7, "invalidparametervalueexcept": 7, "entri": 7, "upon": 7, "first": 7, "choic": 7, "expans": 7, "naiv": 7, "you": 7, "foo": 7, "howev": 7, "empti": 7, "lead": 7, "place": 7, "would": 7, "onc": 7, "those": 7, "remain": 7, "up": 7, "doe": [7, 10], "match": [7, 9], "annot": 7, "default_callback_group": 7, "describe_paramet": 7, "correspond": [7, 8, 10], "parameternotdeclaredexcept": 7, "describ": 7, "least": [7, 12], "destroy_cli": 7, "destroy_guard_condit": 7, "destroy_nod": 7, "free": 7, "resourc": 7, "destroy_publish": 7, "destroy_r": 7, "destroy_servic": 7, "destroy_subscript": 7, "succes": 7, "destroy_tim": 7, "get_client_names_and_types_by_nod": 7, "node_namespac": 7, "discov": 7, "remot": 7, "fist": 7, "element": 7, "nodenamenonexistenterror": 7, "wasn": 7, "found": [7, 14], "unexpect": [7, 8], "failur": 7, "get_clock": 7, "get_fully_qualified_nam": 7, "get_nam": 7, "get_namespac": 7, "get_node_nam": 7, "get_node_names_and_namespac": 7, "get_node_names_and_namespaces_with_enclav": 7, "enclav": 7, "three": 7, "get_paramet": 7, "hadn": 7, "beforehand": 7, "parameteruninitializedexcept": 7, "static": 7, "uniniti": 7, "get_parameter_or": 7, "alternative_valu": 7, "altern": 7, "not_set": [7, 8], "get_parameter_typ": 7, "get_parameters_by_prefix": 7, "dictionari": 7, "kei": [7, 9], "exampl": [7, 15], "ping": 7, "pong": 7, "bar": 7, "baz": 7, "exist": 7, "note": [7, 9], "separ": [7, 13], "dict": 7, "byte": [7, 12], "sequenc": 7, "get_publisher_names_and_types_by_nod": 7, "no_demangl": 7, "demangl": 7, "get_publishers_info_by_top": 7, "no_mangl": 7, "topicendpointinfo": 7, "where": 7, "endpoint": 7, "gid": 7, "combin": 7, "nativ": 7, "dd": [7, 9], "app": 7, "convent": 7, "find": 7, "get_service_names_and_typ": 7, "get_service_names_and_types_by_nod": 7, "get_subscriber_names_and_types_by_nod": 7, "get_subscriptions_info_by_top": 7, "get_topic_names_and_typ": 7, "rcl_node_t": 7, "cannot": [7, 9], "modifi": 7, "attributeerror": 7, "has_paramet": 7, "remove_on_set_parameters_callback": 7, "valueerror": 7, "present": 7, "remove_wait": 7, "resolve_service_nam": 7, "only_expand": 7, "resolve_topic_nam": 7, "set_descriptor": 7, "parametervalu": [7, 8], "compli": 7, "parameterimmutableexcept": 7, "read": 7, "parametervalueexcept": 7, "neither": 7, "nor": 7, "set_paramet": 7, "parameter_list": 7, "order": 7, "thei": [7, 10, 12], "due": 7, "stai": 7, "attempt": 7, "made": 7, "come": 7, "even": 7, "were": 7, "prior": 7, "reflect": 7, "successfulli": 7, "parameterev": 7, "set_parameters_atom": 7, "aggreg": 7, "either": 7, "atom": 7, "undeclare_paramet": 7, "caus": 7, "type_": 8, "enumer": [8, 9], "bool_arrai": 8, "6": 8, "byte_arrai": 8, "5": [8, 9], "doubl": 8, "3": [8, 9], "double_arrai": 8, "8": [8, 9], "integ": [8, 13], "integer_arrai": 8, "7": 8, "4": [8, 9], "string_arrai": 8, "9": 8, "parameter_valu": 8, "classmethod": [8, 9], "from_parameter_valu": 8, "variabl": [8, 13], "convers": 8, "from_parameter_msg": 8, "param_msg": 8, "get_parameter_valu": 8, "to_parameter_msg": 8, "parameter_value_to_python": 8, "builtin": 8, "rcl_interfac": 8, "msg": [8, 12], "member": 8, "parameter_servic": 8, "parameterservic": 8, "enum": 9, "durabl": 9, "rmw": [9, 13], "h": 9, "rmw_qos_policy_durability_system_default": 9, "rmw_qos_policy_durability_transient_loc": 9, "rmw_qos_policy_durability_unknown": 9, "rmw_qos_policy_durability_volatil": 9, "system_default": 9, "transient_loc": 9, "volatil": 9, "keep_al": 9, "rmw_qos_policy_history_keep_al": 9, "rmw_qos_policy_history_keep_last": 9, "rmw_qos_policy_history_system_default": 9, "rmw_qos_policy_history_unknown": 9, "liveli": [9, 12], "automat": 9, "manual_by_top": [9, 12], "rmw_qos_policy_liveliness_automat": 9, "rmw_qos_policy_liveliness_manual_by_top": 9, "rmw_qos_policy_liveliness_system_default": 9, "alia": 9, "polici": [9, 12], "helper": 9, "filter": 9, "get_from_short_kei": 9, "retriev": 9, "short": 9, "insensit": 9, "short_kei": 9, "shorten": 9, "friendli": 9, "incompatible_qos_events_status": 9, "avoid_ros_namespace_convent": 9, "512": 9, "deadlin": 9, "128": 9, "32": 9, "lifespan": 9, "64": 9, "liveliness_lease_dur": [9, 12], "256": 9, "reliabl": [9, 12], "16": 9, "action_status_default": 9, "duplic": 9, "our": 9, "support": 9, "version": 9, "python3": 9, "fix": [9, 11], "mixin": 9, "parameter_ev": 9, "sensor_data": 9, "services_default": 9, "field": 9, "attribut": 9, "durat": [9, 12], "get_c_qos_profil": 9, "best_effort": 9, "rmw_qos_policy_reliability_best_effort": 9, "rmw_qos_policy_reliability_reli": 9, "rmw_qos_policy_reliability_system_default": 9, "rmw_qos_policy_reliability_unknown": 9, "publisher_qo": 9, "subscription_qo": 9, "compat": [9, 13], "qoscompat": 9, "warn": 9, "structur": 9, "policy_kind": 9, "transient": 9, "local": 9, "similar": 9, "larger": 9, "queue": 9, "lost": 9, "sensor": 9, "best": 9, "effort": 9, "small": 9, "vendor": 9, "tool": 9, "client_impl": 10, "constuctor": [10, 12], "_rclpy": 10, "rcl_client_t": 10, "srvtype": 10, "call_async": 10, "asyncron": 10, "get_pending_request": 10, "sequence_numb": 10, "pend": 10, "keyerror": 10, "remove_pending_request": 10, "service_is_readi": 10, "wait_for_servic": 10, "becom": 10, "becam": 10, "while": 10, "service_impl": 10, "rcl_service_t": 10, "send_respons": 10, "header": 10, "origin": 10, "sleep": 11, "trigger": 11, "care": 11, "timer_period_n": 11, "is_cancel": 11, "reset": 11, "time_since_last_cal": 11, "time_until_next_cal": 11, "publisher_impl": 12, "mean": 12, "rcl_publisher_t": 12, "assert_liveli": 12, "manual": 12, "assert": 12, "aliv": 12, "applic": 12, "often": 12, "get_subscription_count": 12, "amount": 12, "wait_for_all_ack": 12, "nanosecond": [12, 13], "1000000000": 12, "elaps": 12, "greater": 12, "subscription_impl": 12, "constructor": 12, "rcl_subscription_t": 12, "ament": 13, "index": [13, 15], "overridden": 13, "environ": 13, "rmw_implement": 13, "platform": 13, "unavail": 13, "shutting_down": 13, "singleton": 13, "convert": 13, "tend": 13, "style": 13, "rcl_wait": 13, "1n": 13, "github": 14, "ros2": 14, "modul": 15, "search": 15, "page": 15}, "objects": {"": [[5, 0, 0, "-", "rclpy"]], "rclpy.action": [[2, 0, 0, "-", "client"], [2, 0, 0, "-", "server"]], "rclpy.action.client": [[2, 1, 1, "", "ActionClient"], [2, 1, 1, "", "ClientGoalHandle"]], "rclpy.action.client.ActionClient": [[2, 2, 1, "", "add_to_wait_set"], [2, 2, 1, "", "destroy"], [2, 2, 1, "", "execute"], [2, 2, 1, "", "get_num_entities"], [2, 2, 1, "", "is_ready"], [2, 2, 1, "", "send_goal"], [2, 2, 1, "", "send_goal_async"], [2, 2, 1, "", "server_is_ready"], [2, 2, 1, "", "take_data"], [2, 2, 1, "", "wait_for_server"]], "rclpy.action.client.ClientGoalHandle": [[2, 3, 1, "", "accepted"], [2, 2, 1, "", "cancel_goal"], [2, 2, 1, "", "cancel_goal_async"], [2, 2, 1, "", "get_result"], [2, 2, 1, "", "get_result_async"], [2, 3, 1, "", "goal_id"], [2, 3, 1, "", "stamp"], [2, 3, 1, "", "status"]], "rclpy.action.server": [[2, 1, 1, "", "ActionServer"], [2, 1, 1, "", "CancelResponse"], [2, 1, 1, "", "GoalResponse"], [2, 1, 1, "", "ServerGoalHandle"], [2, 5, 1, "", "default_cancel_callback"], [2, 5, 1, "", "default_goal_callback"], [2, 5, 1, "", "default_handle_accepted_callback"]], "rclpy.action.server.ActionServer": [[2, 3, 1, "", "action_type"], [2, 2, 1, "", "add_to_wait_set"], [2, 2, 1, "", "destroy"], [2, 2, 1, "", "execute"], [2, 2, 1, "", "get_num_entities"], [2, 2, 1, "", "is_ready"], [2, 2, 1, "", "notify_execute"], [2, 2, 1, "", "notify_goal_done"], [2, 2, 1, "", "register_cancel_callback"], [2, 2, 1, "", "register_execute_callback"], [2, 2, 1, "", "register_goal_callback"], [2, 2, 1, "", "register_handle_accepted_callback"], [2, 2, 1, "", "take_data"]], "rclpy.action.server.CancelResponse": [[2, 4, 1, "", "ACCEPT"], [2, 4, 1, "", "REJECT"]], "rclpy.action.server.GoalResponse": [[2, 4, 1, "", "ACCEPT"], [2, 4, 1, "", "REJECT"]], "rclpy.action.server.ServerGoalHandle": [[2, 2, 1, "", "abort"], [2, 2, 1, "", "canceled"], [2, 2, 1, "", "destroy"], [2, 2, 1, "", "execute"], [2, 3, 1, "", "goal_id"], [2, 3, 1, "", "is_active"], [2, 3, 1, "", "is_cancel_requested"], [2, 2, 1, "", "publish_feedback"], [2, 3, 1, "", "request"], [2, 3, 1, "", "status"], [2, 2, 1, "", "succeed"]], "rclpy": [[4, 0, 0, "-", "callback_groups"], [10, 0, 0, "-", "client"], [3, 0, 0, "-", "context"], [5, 5, 1, "", "create_node"], [4, 0, 0, "-", "executors"], [5, 5, 1, "", "get_global_executor"], [5, 5, 1, "", "init"], [6, 0, 0, "-", "logging"], [7, 0, 0, "-", "node"], [8, 0, 0, "-", "parameter"], [8, 0, 0, "-", "parameter_service"], [12, 0, 0, "-", "publisher"], [9, 0, 0, "-", "qos"], [10, 0, 0, "-", "service"], [5, 5, 1, "", "shutdown"], [5, 5, 1, "", "spin"], [5, 5, 1, "", "spin_once"], [5, 5, 1, "", "spin_until_future_complete"], [12, 0, 0, "-", "subscription"], [11, 0, 0, "-", "timer"], [13, 0, 0, "-", "utilities"]], "rclpy.callback_groups": [[4, 1, 1, "", "CallbackGroup"], [4, 1, 1, "", "MutuallyExclusiveCallbackGroup"], [4, 1, 1, "", "ReentrantCallbackGroup"]], "rclpy.callback_groups.CallbackGroup": [[4, 2, 1, "", "add_entity"], [4, 2, 1, "", "beginning_execution"], [4, 2, 1, "", "can_execute"], [4, 2, 1, "", "ending_execution"], [4, 2, 1, "", "has_entity"]], "rclpy.callback_groups.MutuallyExclusiveCallbackGroup": [[4, 2, 1, "", "beginning_execution"], [4, 2, 1, "", "can_execute"], [4, 2, 1, "", "ending_execution"]], "rclpy.callback_groups.ReentrantCallbackGroup": [[4, 2, 1, "", "beginning_execution"], [4, 2, 1, "", "can_execute"], [4, 2, 1, "", "ending_execution"]], "rclpy.client": [[10, 1, 1, "", "Client"]], "rclpy.client.Client": [[10, 2, 1, "", "call"], [10, 2, 1, "", "call_async"], [10, 2, 1, "", "destroy"], [10, 2, 1, "", "get_pending_request"], [10, 3, 1, "", "handle"], [10, 2, 1, "", "remove_pending_request"], [10, 2, 1, "", "service_is_ready"], [10, 2, 1, "", "wait_for_service"]], "rclpy.context": [[3, 1, 1, "", "Context"]], "rclpy.context.Context": [[3, 2, 1, "", "destroy"], [3, 2, 1, "", "get_domain_id"], [3, 3, 1, "", "handle"], [3, 2, 1, "", "init"], [3, 2, 1, "", "ok"], [3, 2, 1, "", "on_shutdown"], [3, 2, 1, "", "shutdown"], [3, 2, 1, "", "try_shutdown"]], "rclpy.executors": [[4, 6, 1, "", "ConditionReachedException"], [4, 1, 1, "", "Executor"], [4, 6, 1, "", "ExternalShutdownException"], [4, 1, 1, "", "MultiThreadedExecutor"], [4, 6, 1, "", "ShutdownException"], [4, 1, 1, "", "SingleThreadedExecutor"], [4, 6, 1, "", "TimeoutException"], [4, 5, 1, "", "await_or_execute"]], "rclpy.executors.Executor": [[4, 2, 1, "", "_wait_for_ready_callbacks"], [4, 2, 1, "", "add_node"], [4, 2, 1, "", "can_execute"], [4, 3, 1, "", "context"], [4, 2, 1, "", "create_task"], [4, 2, 1, "", "get_nodes"], [4, 2, 1, "", "remove_node"], [4, 2, 1, "", "shutdown"], [4, 2, 1, "", "spin"], [4, 2, 1, "", "spin_once"], [4, 2, 1, "", "spin_once_until_future_complete"], [4, 2, 1, "", "spin_until_future_complete"], [4, 2, 1, "", "wait_for_ready_callbacks"], [4, 2, 1, "", "wake"]], "rclpy.executors.MultiThreadedExecutor": [[4, 2, 1, "", "spin_once"], [4, 2, 1, "", "spin_once_until_future_complete"]], "rclpy.executors.SingleThreadedExecutor": [[4, 2, 1, "", "spin_once"], [4, 2, 1, "", "spin_once_until_future_complete"]], "rclpy.logging": [[6, 5, 1, "", "clear_config"], [6, 5, 1, "", "get_logger"], [6, 5, 1, "", "get_logger_effective_level"], [6, 5, 1, "", "get_logging_directory"], [6, 5, 1, "", "get_logging_severity_from_string"], [6, 5, 1, "", "initialize"], [6, 5, 1, "", "set_logger_level"], [6, 5, 1, "", "shutdown"]], "rclpy.node": [[7, 1, 1, "", "Node"]], "rclpy.node.Node": [[7, 4, 1, "", "PARAM_REL_TOL"], [7, 2, 1, "", "add_on_set_parameters_callback"], [7, 2, 1, "", "add_waitable"], [7, 3, 1, "", "clients"], [7, 3, 1, "", "context"], [7, 2, 1, "", "count_publishers"], [7, 2, 1, "", "count_subscribers"], [7, 2, 1, "", "create_client"], [7, 2, 1, "", "create_guard_condition"], [7, 2, 1, "", "create_publisher"], [7, 2, 1, "", "create_rate"], [7, 2, 1, "", "create_service"], [7, 2, 1, "", "create_subscription"], [7, 2, 1, "", "create_timer"], [7, 2, 1, "", "declare_parameter"], [7, 2, 1, "", "declare_parameters"], [7, 3, 1, "", "default_callback_group"], [7, 2, 1, "", "describe_parameter"], [7, 2, 1, "", "describe_parameters"], [7, 2, 1, "", "destroy_client"], [7, 2, 1, "", "destroy_guard_condition"], [7, 2, 1, "", "destroy_node"], [7, 2, 1, "", "destroy_publisher"], [7, 2, 1, "", "destroy_rate"], [7, 2, 1, "", "destroy_service"], [7, 2, 1, "", "destroy_subscription"], [7, 2, 1, "", "destroy_timer"], [7, 3, 1, "", "executor"], [7, 2, 1, "", "get_client_names_and_types_by_node"], [7, 2, 1, "", "get_clock"], [7, 2, 1, "", "get_fully_qualified_name"], [7, 2, 1, "", "get_logger"], [7, 2, 1, "", "get_name"], [7, 2, 1, "", "get_namespace"], [7, 2, 1, "", "get_node_names"], [7, 2, 1, "", "get_node_names_and_namespaces"], [7, 2, 1, "", "get_node_names_and_namespaces_with_enclaves"], [7, 2, 1, "", "get_parameter"], [7, 2, 1, "", "get_parameter_or"], [7, 2, 1, "", "get_parameter_type"], [7, 2, 1, "", "get_parameter_types"], [7, 2, 1, "", "get_parameters"], [7, 2, 1, "", "get_parameters_by_prefix"], [7, 2, 1, "", "get_publisher_names_and_types_by_node"], [7, 2, 1, "", "get_publishers_info_by_topic"], [7, 2, 1, "", "get_service_names_and_types"], [7, 2, 1, "", "get_service_names_and_types_by_node"], [7, 2, 1, "", "get_subscriber_names_and_types_by_node"], [7, 2, 1, "", "get_subscriptions_info_by_topic"], [7, 2, 1, "", "get_topic_names_and_types"], [7, 3, 1, "", "guards"], [7, 3, 1, "", "handle"], [7, 2, 1, "", "has_parameter"], [7, 3, 1, "", "publishers"], [7, 2, 1, "", "remove_on_set_parameters_callback"], [7, 2, 1, "", "remove_waitable"], [7, 2, 1, "", "resolve_service_name"], [7, 2, 1, "", "resolve_topic_name"], [7, 3, 1, "", "services"], [7, 2, 1, "", "set_descriptor"], [7, 2, 1, "", "set_parameters"], [7, 2, 1, "", "set_parameters_atomically"], [7, 3, 1, "", "subscriptions"], [7, 3, 1, "", "timers"], [7, 2, 1, "", "undeclare_parameter"], [7, 3, 1, "", "waitables"]], "rclpy.parameter": [[8, 1, 1, "", "Parameter"], [8, 5, 1, "", "parameter_value_to_python"]], "rclpy.parameter.Parameter": [[8, 1, 1, "", "Type"], [8, 2, 1, "", "from_parameter_msg"], [8, 2, 1, "", "get_parameter_value"], [8, 3, 1, "", "name"], [8, 2, 1, "", "to_parameter_msg"], [8, 3, 1, "", "type_"], [8, 3, 1, "", "value"]], "rclpy.parameter.Parameter.Type": [[8, 4, 1, "", "BOOL"], [8, 4, 1, "", "BOOL_ARRAY"], [8, 4, 1, "", "BYTE_ARRAY"], [8, 4, 1, "", "DOUBLE"], [8, 4, 1, "", "DOUBLE_ARRAY"], [8, 4, 1, "", "INTEGER"], [8, 4, 1, "", "INTEGER_ARRAY"], [8, 4, 1, "", "NOT_SET"], [8, 4, 1, "", "STRING"], [8, 4, 1, "", "STRING_ARRAY"], [8, 2, 1, "", "check"], [8, 2, 1, "", "from_parameter_value"]], "rclpy.parameter_service": [[8, 1, 1, "", "ParameterService"]], "rclpy.publisher": [[12, 1, 1, "", "Publisher"]], "rclpy.publisher.Publisher": [[12, 2, 1, "", "assert_liveliness"], [12, 2, 1, "", "destroy"], [12, 2, 1, "", "get_subscription_count"], [12, 3, 1, "", "handle"], [12, 2, 1, "", "publish"], [12, 3, 1, "", "topic_name"], [12, 2, 1, "", "wait_for_all_acked"]], "rclpy.qos": [[9, 1, 1, "", "DurabilityPolicy"], [9, 1, 1, "", "HistoryPolicy"], [9, 6, 1, "", "InvalidQoSProfileException"], [9, 1, 1, "", "LivelinessPolicy"], [9, 4, 1, "", "QoSDurabilityPolicy"], [9, 4, 1, "", "QoSHistoryPolicy"], [9, 4, 1, "", "QoSLivelinessPolicy"], [9, 1, 1, "", "QoSPolicyEnum"], [9, 1, 1, "", "QoSPolicyKind"], [9, 1, 1, "", "QoSPresetProfiles"], [9, 1, 1, "", "QoSProfile"], [9, 4, 1, "", "QoSReliabilityPolicy"], [9, 1, 1, "", "ReliabilityPolicy"], [9, 5, 1, "", "qos_check_compatible"], [9, 5, 1, "", "qos_policy_name_from_kind"], [9, 7, 1, "", "qos_profile_action_status_default"], [9, 7, 1, "", "qos_profile_parameter_events"], [9, 7, 1, "", "qos_profile_parameters"], [9, 7, 1, "", "qos_profile_sensor_data"], [9, 7, 1, "", "qos_profile_services_default"], [9, 7, 1, "", "qos_profile_system_default"], [9, 7, 1, "", "qos_profile_unknown"]], "rclpy.qos.DurabilityPolicy": [[9, 4, 1, "", "RMW_QOS_POLICY_DURABILITY_SYSTEM_DEFAULT"], [9, 4, 1, "", "RMW_QOS_POLICY_DURABILITY_TRANSIENT_LOCAL"], [9, 4, 1, "", "RMW_QOS_POLICY_DURABILITY_UNKNOWN"], [9, 4, 1, "", "RMW_QOS_POLICY_DURABILITY_VOLATILE"], [9, 4, 1, "", "SYSTEM_DEFAULT"], [9, 4, 1, "", "TRANSIENT_LOCAL"], [9, 4, 1, "", "UNKNOWN"], [9, 4, 1, "", "VOLATILE"]], "rclpy.qos.HistoryPolicy": [[9, 4, 1, "", "KEEP_ALL"], [9, 4, 1, "", "KEEP_LAST"], [9, 4, 1, "", "RMW_QOS_POLICY_HISTORY_KEEP_ALL"], [9, 4, 1, "", "RMW_QOS_POLICY_HISTORY_KEEP_LAST"], [9, 4, 1, "", "RMW_QOS_POLICY_HISTORY_SYSTEM_DEFAULT"], [9, 4, 1, "", "RMW_QOS_POLICY_HISTORY_UNKNOWN"], [9, 4, 1, "", "SYSTEM_DEFAULT"], [9, 4, 1, "", "UNKNOWN"]], "rclpy.qos.LivelinessPolicy": [[9, 4, 1, "", "AUTOMATIC"], [9, 4, 1, "", "MANUAL_BY_TOPIC"], [9, 4, 1, "", "RMW_QOS_POLICY_DURABILITY_UNKNOWN"], [9, 4, 1, "", "RMW_QOS_POLICY_LIVELINESS_AUTOMATIC"], [9, 4, 1, "", "RMW_QOS_POLICY_LIVELINESS_MANUAL_BY_TOPIC"], [9, 4, 1, "", "RMW_QOS_POLICY_LIVELINESS_SYSTEM_DEFAULT"], [9, 4, 1, "", "SYSTEM_DEFAULT"], [9, 4, 1, "", "UNKNOWN"]], "rclpy.qos.QoSPolicyEnum": [[9, 2, 1, "", "get_from_short_key"], [9, 3, 1, "", "short_key"], [9, 2, 1, "", "short_keys"]], "rclpy.qos.QoSPolicyKind": [[9, 4, 1, "", "AVOID_ROS_NAMESPACE_CONVENTIONS"], [9, 4, 1, "", "DEADLINE"], [9, 4, 1, "", "DEPTH"], [9, 4, 1, "", "DURABILITY"], [9, 4, 1, "", "HISTORY"], [9, 4, 1, "", "INVALID"], [9, 4, 1, "", "LIFESPAN"], [9, 4, 1, "", "LIVELINESS"], [9, 4, 1, "", "LIVELINESS_LEASE_DURATION"], [9, 4, 1, "", "RELIABILITY"]], "rclpy.qos.QoSPresetProfiles": [[9, 4, 1, "", "ACTION_STATUS_DEFAULT"], [9, 4, 1, "", "PARAMETERS"], [9, 4, 1, "", "PARAMETER_EVENTS"], [9, 4, 1, "", "SENSOR_DATA"], [9, 4, 1, "", "SERVICES_DEFAULT"], [9, 4, 1, "", "SYSTEM_DEFAULT"], [9, 4, 1, "", "UNKNOWN"], [9, 2, 1, "", "get_from_short_key"], [9, 2, 1, "", "short_keys"]], "rclpy.qos.QoSProfile": [[9, 3, 1, "", "avoid_ros_namespace_conventions"], [9, 3, 1, "", "deadline"], [9, 3, 1, "", "depth"], [9, 3, 1, "", "durability"], [9, 2, 1, "", "get_c_qos_profile"], [9, 3, 1, "", "history"], [9, 3, 1, "", "lifespan"], [9, 3, 1, "", "liveliness"], [9, 3, 1, "", "liveliness_lease_duration"], [9, 3, 1, "", "reliability"]], "rclpy.qos.ReliabilityPolicy": [[9, 4, 1, "", "BEST_EFFORT"], [9, 4, 1, "", "RELIABLE"], [9, 4, 1, "", "RMW_QOS_POLICY_RELIABILITY_BEST_EFFORT"], [9, 4, 1, "", "RMW_QOS_POLICY_RELIABILITY_RELIABLE"], [9, 4, 1, "", "RMW_QOS_POLICY_RELIABILITY_SYSTEM_DEFAULT"], [9, 4, 1, "", "RMW_QOS_POLICY_RELIABILITY_UNKNOWN"], [9, 4, 1, "", "SYSTEM_DEFAULT"], [9, 4, 1, "", "UNKNOWN"]], "rclpy.service": [[10, 1, 1, "", "Service"]], "rclpy.service.Service": [[10, 2, 1, "", "destroy"], [10, 3, 1, "", "handle"], [10, 2, 1, "", "send_response"]], "rclpy.subscription": [[12, 1, 1, "", "Subscription"]], "rclpy.subscription.Subscription": [[12, 2, 1, "", "destroy"], [12, 3, 1, "", "handle"], [12, 3, 1, "", "topic_name"]], "rclpy.timer": [[11, 1, 1, "", "Rate"], [11, 1, 1, "", "Timer"]], "rclpy.timer.Rate": [[11, 2, 1, "", "destroy"], [11, 2, 1, "", "sleep"]], "rclpy.timer.Timer": [[11, 2, 1, "", "cancel"], [11, 3, 1, "", "clock"], [11, 2, 1, "", "destroy"], [11, 3, 1, "", "handle"], [11, 2, 1, "", "is_canceled"], [11, 2, 1, "", "is_ready"], [11, 2, 1, "", "reset"], [11, 2, 1, "", "time_since_last_call"], [11, 2, 1, "", "time_until_next_call"], [11, 3, 1, "", "timer_period_ns"]], "rclpy.utilities": [[13, 5, 1, "", "get_available_rmw_implementations"], [13, 5, 1, "", "get_default_context"], [13, 5, 1, "", "get_rmw_implementation_identifier"], [13, 5, 1, "", "ok"], [13, 5, 1, "", "remove_ros_args"], [13, 5, 1, "", "shutdown"], [13, 5, 1, "", "timeout_sec_to_nsec"], [13, 5, 1, "", "try_shutdown"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function", "6": "py:exception", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "titleterms": {"about": 0, "api": 1, "content": 1, "action": 2, "client": [2, 10], "server": 2, "context": 3, "execut": 4, "callback": 4, "executor": 4, "group": 4, "initi": 5, "shutdown": 5, "spin": 5, "log": 6, "node": 7, "paramet": 8, "servic": [8, 9, 10], "qualiti": 9, "timer": 11, "topic": 12, "publish": 12, "subscript": 12, "util": 13, "exampl": 14, "rclpy": 15, "indic": 15, "tabl": 15}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"About": [[0, "about"]], "API": [[1, "api"]], "Contents:": [[1, null]], "Actions": [[2, "actions"]], "Action Client": [[2, "module-rclpy.action.client"]], "Action Server": [[2, "module-rclpy.action.server"]], "Context": [[3, "module-rclpy.context"]], "Execution and Callbacks": [[4, "execution-and-callbacks"]], "Executors": [[4, "module-rclpy.executors"]], "Callback Groups": [[4, "module-rclpy.callback_groups"]], "Initialization, Shutdown, and Spinning": [[5, "module-rclpy"]], "Logging": [[6, "module-rclpy.logging"]], "Node": [[7, "module-rclpy.node"]], "Parameters": [[8, "parameters"]], "Parameter": [[8, "module-rclpy.parameter"]], "Parameter Service": [[8, "module-rclpy.parameter_service"]], "Quality of Service": [[9, "module-rclpy.qos"]], "Services": [[10, "services"]], "Client": [[10, "module-rclpy.client"]], "Service": [[10, "module-rclpy.service"]], "Timer": [[11, "module-rclpy.timer"]], "Topics": [[12, "topics"]], "Publisher": [[12, "module-rclpy.publisher"]], "Subscription": [[12, "module-rclpy.subscription"]], "Utilities": [[13, "module-rclpy.utilities"]], "Examples": [[14, "examples"]], "rclpy": [[15, "rclpy"]], "Indices and tables": [[15, "indices-and-tables"]]}, "indexentries": {"accept (rclpy.action.server.cancelresponse attribute)": [[2, "rclpy.action.server.CancelResponse.ACCEPT"]], "accept (rclpy.action.server.goalresponse attribute)": [[2, "rclpy.action.server.GoalResponse.ACCEPT"]], "actionclient (class in rclpy.action.client)": [[2, "rclpy.action.client.ActionClient"]], "actionserver (class in rclpy.action.server)": [[2, "rclpy.action.server.ActionServer"]], "cancelresponse (class in rclpy.action.server)": [[2, "rclpy.action.server.CancelResponse"]], "clientgoalhandle (class in rclpy.action.client)": [[2, "rclpy.action.client.ClientGoalHandle"]], "goalresponse (class in rclpy.action.server)": [[2, "rclpy.action.server.GoalResponse"]], "reject (rclpy.action.server.cancelresponse attribute)": [[2, "rclpy.action.server.CancelResponse.REJECT"]], "reject (rclpy.action.server.goalresponse attribute)": [[2, "rclpy.action.server.GoalResponse.REJECT"]], "servergoalhandle (class in rclpy.action.server)": [[2, "rclpy.action.server.ServerGoalHandle"]], "abort() (rclpy.action.server.servergoalhandle method)": [[2, "rclpy.action.server.ServerGoalHandle.abort"]], "accepted (rclpy.action.client.clientgoalhandle property)": [[2, "rclpy.action.client.ClientGoalHandle.accepted"]], "action_type (rclpy.action.server.actionserver property)": [[2, "rclpy.action.server.ActionServer.action_type"]], "add_to_wait_set() (rclpy.action.client.actionclient method)": [[2, "rclpy.action.client.ActionClient.add_to_wait_set"]], "add_to_wait_set() (rclpy.action.server.actionserver method)": [[2, "rclpy.action.server.ActionServer.add_to_wait_set"]], "cancel_goal() (rclpy.action.client.clientgoalhandle method)": [[2, "rclpy.action.client.ClientGoalHandle.cancel_goal"]], "cancel_goal_async() (rclpy.action.client.clientgoalhandle method)": [[2, "rclpy.action.client.ClientGoalHandle.cancel_goal_async"]], "canceled() (rclpy.action.server.servergoalhandle method)": [[2, "rclpy.action.server.ServerGoalHandle.canceled"]], "default_cancel_callback() (in module rclpy.action.server)": [[2, "rclpy.action.server.default_cancel_callback"]], "default_goal_callback() (in module rclpy.action.server)": [[2, "rclpy.action.server.default_goal_callback"]], "default_handle_accepted_callback() (in module rclpy.action.server)": [[2, "rclpy.action.server.default_handle_accepted_callback"]], "destroy() (rclpy.action.client.actionclient method)": [[2, "rclpy.action.client.ActionClient.destroy"]], "destroy() (rclpy.action.server.actionserver method)": [[2, "rclpy.action.server.ActionServer.destroy"]], "destroy() (rclpy.action.server.servergoalhandle method)": [[2, "rclpy.action.server.ServerGoalHandle.destroy"]], "execute() (rclpy.action.client.actionclient method)": [[2, "rclpy.action.client.ActionClient.execute"]], "execute() (rclpy.action.server.actionserver method)": [[2, "rclpy.action.server.ActionServer.execute"]], "execute() (rclpy.action.server.servergoalhandle method)": [[2, "rclpy.action.server.ServerGoalHandle.execute"]], "get_num_entities() (rclpy.action.client.actionclient method)": [[2, "rclpy.action.client.ActionClient.get_num_entities"]], "get_num_entities() (rclpy.action.server.actionserver method)": [[2, "rclpy.action.server.ActionServer.get_num_entities"]], "get_result() (rclpy.action.client.clientgoalhandle method)": [[2, "rclpy.action.client.ClientGoalHandle.get_result"]], "get_result_async() (rclpy.action.client.clientgoalhandle method)": [[2, "rclpy.action.client.ClientGoalHandle.get_result_async"]], "goal_id (rclpy.action.client.clientgoalhandle property)": [[2, "rclpy.action.client.ClientGoalHandle.goal_id"]], "goal_id (rclpy.action.server.servergoalhandle property)": [[2, "rclpy.action.server.ServerGoalHandle.goal_id"]], "is_active (rclpy.action.server.servergoalhandle property)": [[2, "rclpy.action.server.ServerGoalHandle.is_active"]], "is_cancel_requested (rclpy.action.server.servergoalhandle property)": [[2, "rclpy.action.server.ServerGoalHandle.is_cancel_requested"]], "is_ready() (rclpy.action.client.actionclient method)": [[2, "rclpy.action.client.ActionClient.is_ready"]], "is_ready() (rclpy.action.server.actionserver method)": [[2, "rclpy.action.server.ActionServer.is_ready"]], "module": [[2, "module-rclpy.action.client"], [2, "module-rclpy.action.server"], [3, "module-rclpy.context"], [4, "module-rclpy.callback_groups"], [4, "module-rclpy.executors"], [5, "module-rclpy"], [6, "module-rclpy.logging"], [7, "module-rclpy.node"], [8, "module-rclpy.parameter"], [8, "module-rclpy.parameter_service"], [9, "module-rclpy.qos"], [10, "module-rclpy.client"], [10, "module-rclpy.service"], [11, "module-rclpy.timer"], [12, "module-rclpy.publisher"], [12, "module-rclpy.subscription"], [13, "module-rclpy.utilities"]], "notify_execute() (rclpy.action.server.actionserver method)": [[2, "rclpy.action.server.ActionServer.notify_execute"]], "notify_goal_done() (rclpy.action.server.actionserver method)": [[2, "rclpy.action.server.ActionServer.notify_goal_done"]], "publish_feedback() (rclpy.action.server.servergoalhandle method)": [[2, "rclpy.action.server.ServerGoalHandle.publish_feedback"]], "rclpy.action.client": [[2, "module-rclpy.action.client"]], "rclpy.action.server": [[2, "module-rclpy.action.server"]], "register_cancel_callback() (rclpy.action.server.actionserver method)": [[2, "rclpy.action.server.ActionServer.register_cancel_callback"]], "register_execute_callback() (rclpy.action.server.actionserver method)": [[2, "rclpy.action.server.ActionServer.register_execute_callback"]], "register_goal_callback() (rclpy.action.server.actionserver method)": [[2, "rclpy.action.server.ActionServer.register_goal_callback"]], "register_handle_accepted_callback() (rclpy.action.server.actionserver method)": [[2, "rclpy.action.server.ActionServer.register_handle_accepted_callback"]], "request (rclpy.action.server.servergoalhandle property)": [[2, "rclpy.action.server.ServerGoalHandle.request"]], "send_goal() (rclpy.action.client.actionclient method)": [[2, "rclpy.action.client.ActionClient.send_goal"]], "send_goal_async() (rclpy.action.client.actionclient method)": [[2, "rclpy.action.client.ActionClient.send_goal_async"]], "server_is_ready() (rclpy.action.client.actionclient method)": [[2, "rclpy.action.client.ActionClient.server_is_ready"]], "stamp (rclpy.action.client.clientgoalhandle property)": [[2, "rclpy.action.client.ClientGoalHandle.stamp"]], "status (rclpy.action.client.clientgoalhandle property)": [[2, "rclpy.action.client.ClientGoalHandle.status"]], "status (rclpy.action.server.servergoalhandle property)": [[2, "rclpy.action.server.ServerGoalHandle.status"]], "succeed() (rclpy.action.server.servergoalhandle method)": [[2, "rclpy.action.server.ServerGoalHandle.succeed"]], "take_data() (rclpy.action.client.actionclient method)": [[2, "rclpy.action.client.ActionClient.take_data"]], "take_data() (rclpy.action.server.actionserver method)": [[2, "rclpy.action.server.ActionServer.take_data"]], "wait_for_server() (rclpy.action.client.actionclient method)": [[2, "rclpy.action.client.ActionClient.wait_for_server"]], "context (class in rclpy.context)": [[3, "rclpy.context.Context"]], "destroy() (rclpy.context.context method)": [[3, "rclpy.context.Context.destroy"]], "get_domain_id() (rclpy.context.context method)": [[3, "rclpy.context.Context.get_domain_id"]], "handle (rclpy.context.context property)": [[3, "rclpy.context.Context.handle"]], "init() (rclpy.context.context method)": [[3, "rclpy.context.Context.init"]], "ok() (rclpy.context.context method)": [[3, "rclpy.context.Context.ok"]], "on_shutdown() (rclpy.context.context method)": [[3, "rclpy.context.Context.on_shutdown"]], "rclpy.context": [[3, "module-rclpy.context"]], "shutdown() (rclpy.context.context method)": [[3, "rclpy.context.Context.shutdown"]], "try_shutdown() (rclpy.context.context method)": [[3, "rclpy.context.Context.try_shutdown"]], "callbackgroup (class in rclpy.callback_groups)": [[4, "rclpy.callback_groups.CallbackGroup"]], "conditionreachedexception": [[4, "rclpy.executors.ConditionReachedException"]], "executor (class in rclpy.executors)": [[4, "rclpy.executors.Executor"]], "externalshutdownexception": [[4, "rclpy.executors.ExternalShutdownException"]], "multithreadedexecutor (class in rclpy.executors)": [[4, "rclpy.executors.MultiThreadedExecutor"]], "mutuallyexclusivecallbackgroup (class in rclpy.callback_groups)": [[4, "rclpy.callback_groups.MutuallyExclusiveCallbackGroup"]], "reentrantcallbackgroup (class in rclpy.callback_groups)": [[4, "rclpy.callback_groups.ReentrantCallbackGroup"]], "shutdownexception": [[4, "rclpy.executors.ShutdownException"]], "singlethreadedexecutor (class in rclpy.executors)": [[4, "rclpy.executors.SingleThreadedExecutor"]], "timeoutexception": [[4, "rclpy.executors.TimeoutException"]], "_wait_for_ready_callbacks() (rclpy.executors.executor method)": [[4, "rclpy.executors.Executor._wait_for_ready_callbacks"]], "add_entity() (rclpy.callback_groups.callbackgroup method)": [[4, "rclpy.callback_groups.CallbackGroup.add_entity"]], "add_node() (rclpy.executors.executor method)": [[4, "rclpy.executors.Executor.add_node"]], "await_or_execute() (in module rclpy.executors)": [[4, "rclpy.executors.await_or_execute"]], "beginning_execution() (rclpy.callback_groups.callbackgroup method)": [[4, "rclpy.callback_groups.CallbackGroup.beginning_execution"]], "beginning_execution() (rclpy.callback_groups.mutuallyexclusivecallbackgroup method)": [[4, "rclpy.callback_groups.MutuallyExclusiveCallbackGroup.beginning_execution"]], "beginning_execution() (rclpy.callback_groups.reentrantcallbackgroup method)": [[4, "rclpy.callback_groups.ReentrantCallbackGroup.beginning_execution"]], "can_execute() (rclpy.callback_groups.callbackgroup method)": [[4, "rclpy.callback_groups.CallbackGroup.can_execute"]], "can_execute() (rclpy.callback_groups.mutuallyexclusivecallbackgroup method)": [[4, "rclpy.callback_groups.MutuallyExclusiveCallbackGroup.can_execute"]], "can_execute() (rclpy.callback_groups.reentrantcallbackgroup method)": [[4, "rclpy.callback_groups.ReentrantCallbackGroup.can_execute"]], "can_execute() (rclpy.executors.executor method)": [[4, "rclpy.executors.Executor.can_execute"]], "context (rclpy.executors.executor property)": [[4, "rclpy.executors.Executor.context"]], "create_task() (rclpy.executors.executor method)": [[4, "rclpy.executors.Executor.create_task"]], "ending_execution() (rclpy.callback_groups.callbackgroup method)": [[4, "rclpy.callback_groups.CallbackGroup.ending_execution"]], "ending_execution() (rclpy.callback_groups.mutuallyexclusivecallbackgroup method)": [[4, "rclpy.callback_groups.MutuallyExclusiveCallbackGroup.ending_execution"]], "ending_execution() (rclpy.callback_groups.reentrantcallbackgroup method)": [[4, "rclpy.callback_groups.ReentrantCallbackGroup.ending_execution"]], "get_nodes() (rclpy.executors.executor method)": [[4, "rclpy.executors.Executor.get_nodes"]], "has_entity() (rclpy.callback_groups.callbackgroup method)": [[4, "rclpy.callback_groups.CallbackGroup.has_entity"]], "rclpy.callback_groups": [[4, "module-rclpy.callback_groups"]], "rclpy.executors": [[4, "module-rclpy.executors"]], "remove_node() (rclpy.executors.executor method)": [[4, "rclpy.executors.Executor.remove_node"]], "shutdown() (rclpy.executors.executor method)": [[4, "rclpy.executors.Executor.shutdown"]], "spin() (rclpy.executors.executor method)": [[4, "rclpy.executors.Executor.spin"]], "spin_once() (rclpy.executors.executor method)": [[4, "rclpy.executors.Executor.spin_once"]], "spin_once() (rclpy.executors.multithreadedexecutor method)": [[4, "rclpy.executors.MultiThreadedExecutor.spin_once"]], "spin_once() (rclpy.executors.singlethreadedexecutor method)": [[4, "rclpy.executors.SingleThreadedExecutor.spin_once"]], "spin_once_until_future_complete() (rclpy.executors.executor method)": [[4, "rclpy.executors.Executor.spin_once_until_future_complete"]], "spin_once_until_future_complete() (rclpy.executors.multithreadedexecutor method)": [[4, "rclpy.executors.MultiThreadedExecutor.spin_once_until_future_complete"]], "spin_once_until_future_complete() (rclpy.executors.singlethreadedexecutor method)": [[4, "rclpy.executors.SingleThreadedExecutor.spin_once_until_future_complete"]], "spin_until_future_complete() (rclpy.executors.executor method)": [[4, "rclpy.executors.Executor.spin_until_future_complete"]], "wait_for_ready_callbacks() (rclpy.executors.executor method)": [[4, "rclpy.executors.Executor.wait_for_ready_callbacks"]], "wake() (rclpy.executors.executor method)": [[4, "rclpy.executors.Executor.wake"]], "create_node() (in module rclpy)": [[5, "rclpy.create_node"]], "get_global_executor() (in module rclpy)": [[5, "rclpy.get_global_executor"]], "init() (in module rclpy)": [[5, "rclpy.init"]], "rclpy": [[5, "module-rclpy"]], "shutdown() (in module rclpy)": [[5, "rclpy.shutdown"]], "spin() (in module rclpy)": [[5, "rclpy.spin"]], "spin_once() (in module rclpy)": [[5, "rclpy.spin_once"]], "spin_until_future_complete() (in module rclpy)": [[5, "rclpy.spin_until_future_complete"]], "clear_config() (in module rclpy.logging)": [[6, "rclpy.logging.clear_config"]], "get_logger() (in module rclpy.logging)": [[6, "rclpy.logging.get_logger"]], "get_logger_effective_level() (in module rclpy.logging)": [[6, "rclpy.logging.get_logger_effective_level"]], "get_logging_directory() (in module rclpy.logging)": [[6, "rclpy.logging.get_logging_directory"]], "get_logging_severity_from_string() (in module rclpy.logging)": [[6, "rclpy.logging.get_logging_severity_from_string"]], "initialize() (in module rclpy.logging)": [[6, "rclpy.logging.initialize"]], "rclpy.logging": [[6, "module-rclpy.logging"]], "set_logger_level() (in module rclpy.logging)": [[6, "rclpy.logging.set_logger_level"]], "shutdown() (in module rclpy.logging)": [[6, "rclpy.logging.shutdown"]], "node (class in rclpy.node)": [[7, "rclpy.node.Node"]], "param_rel_tol (rclpy.node.node attribute)": [[7, "rclpy.node.Node.PARAM_REL_TOL"]], "add_on_set_parameters_callback() (rclpy.node.node method)": [[7, "rclpy.node.Node.add_on_set_parameters_callback"]], "add_waitable() (rclpy.node.node method)": [[7, "rclpy.node.Node.add_waitable"]], "clients (rclpy.node.node property)": [[7, "rclpy.node.Node.clients"]], "context (rclpy.node.node property)": [[7, "rclpy.node.Node.context"]], "count_publishers() (rclpy.node.node method)": [[7, "rclpy.node.Node.count_publishers"]], "count_subscribers() (rclpy.node.node method)": [[7, "rclpy.node.Node.count_subscribers"]], "create_client() (rclpy.node.node method)": [[7, "rclpy.node.Node.create_client"]], "create_guard_condition() (rclpy.node.node method)": [[7, "rclpy.node.Node.create_guard_condition"]], "create_publisher() (rclpy.node.node method)": [[7, "rclpy.node.Node.create_publisher"]], "create_rate() (rclpy.node.node method)": [[7, "rclpy.node.Node.create_rate"]], "create_service() (rclpy.node.node method)": [[7, "rclpy.node.Node.create_service"]], "create_subscription() (rclpy.node.node method)": [[7, "rclpy.node.Node.create_subscription"]], "create_timer() (rclpy.node.node method)": [[7, "rclpy.node.Node.create_timer"]], "declare_parameter() (rclpy.node.node method)": [[7, "rclpy.node.Node.declare_parameter"]], "declare_parameters() (rclpy.node.node method)": [[7, "rclpy.node.Node.declare_parameters"]], "default_callback_group (rclpy.node.node property)": [[7, "rclpy.node.Node.default_callback_group"]], "describe_parameter() (rclpy.node.node method)": [[7, "rclpy.node.Node.describe_parameter"]], "describe_parameters() (rclpy.node.node method)": [[7, "rclpy.node.Node.describe_parameters"]], "destroy_client() (rclpy.node.node method)": [[7, "rclpy.node.Node.destroy_client"]], "destroy_guard_condition() (rclpy.node.node method)": [[7, "rclpy.node.Node.destroy_guard_condition"]], "destroy_node() (rclpy.node.node method)": [[7, "rclpy.node.Node.destroy_node"]], "destroy_publisher() (rclpy.node.node method)": [[7, "rclpy.node.Node.destroy_publisher"]], "destroy_rate() (rclpy.node.node method)": [[7, "rclpy.node.Node.destroy_rate"]], "destroy_service() (rclpy.node.node method)": [[7, "rclpy.node.Node.destroy_service"]], "destroy_subscription() (rclpy.node.node method)": [[7, "rclpy.node.Node.destroy_subscription"]], "destroy_timer() (rclpy.node.node method)": [[7, "rclpy.node.Node.destroy_timer"]], "executor (rclpy.node.node property)": [[7, "rclpy.node.Node.executor"]], "get_client_names_and_types_by_node() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_client_names_and_types_by_node"]], "get_clock() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_clock"]], "get_fully_qualified_name() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_fully_qualified_name"]], "get_logger() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_logger"]], "get_name() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_name"]], "get_namespace() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_namespace"]], "get_node_names() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_node_names"]], "get_node_names_and_namespaces() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_node_names_and_namespaces"]], "get_node_names_and_namespaces_with_enclaves() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_node_names_and_namespaces_with_enclaves"]], "get_parameter() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_parameter"]], "get_parameter_or() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_parameter_or"]], "get_parameter_type() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_parameter_type"]], "get_parameter_types() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_parameter_types"]], "get_parameters() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_parameters"]], "get_parameters_by_prefix() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_parameters_by_prefix"]], "get_publisher_names_and_types_by_node() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_publisher_names_and_types_by_node"]], "get_publishers_info_by_topic() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_publishers_info_by_topic"]], "get_service_names_and_types() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_service_names_and_types"]], "get_service_names_and_types_by_node() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_service_names_and_types_by_node"]], "get_subscriber_names_and_types_by_node() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_subscriber_names_and_types_by_node"]], "get_subscriptions_info_by_topic() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_subscriptions_info_by_topic"]], "get_topic_names_and_types() (rclpy.node.node method)": [[7, "rclpy.node.Node.get_topic_names_and_types"]], "guards (rclpy.node.node property)": [[7, "rclpy.node.Node.guards"]], "handle (rclpy.node.node property)": [[7, "rclpy.node.Node.handle"]], "has_parameter() (rclpy.node.node method)": [[7, "rclpy.node.Node.has_parameter"]], "publishers (rclpy.node.node property)": [[7, "rclpy.node.Node.publishers"]], "rclpy.node": [[7, "module-rclpy.node"]], "remove_on_set_parameters_callback() (rclpy.node.node method)": [[7, "rclpy.node.Node.remove_on_set_parameters_callback"]], "remove_waitable() (rclpy.node.node method)": [[7, "rclpy.node.Node.remove_waitable"]], "resolve_service_name() (rclpy.node.node method)": [[7, "rclpy.node.Node.resolve_service_name"]], "resolve_topic_name() (rclpy.node.node method)": [[7, "rclpy.node.Node.resolve_topic_name"]], "services (rclpy.node.node property)": [[7, "rclpy.node.Node.services"]], "set_descriptor() (rclpy.node.node method)": [[7, "rclpy.node.Node.set_descriptor"]], "set_parameters() (rclpy.node.node method)": [[7, "rclpy.node.Node.set_parameters"]], "set_parameters_atomically() (rclpy.node.node method)": [[7, "rclpy.node.Node.set_parameters_atomically"]], "subscriptions (rclpy.node.node property)": [[7, "rclpy.node.Node.subscriptions"]], "timers (rclpy.node.node property)": [[7, "rclpy.node.Node.timers"]], "undeclare_parameter() (rclpy.node.node method)": [[7, "rclpy.node.Node.undeclare_parameter"]], "waitables (rclpy.node.node property)": [[7, "rclpy.node.Node.waitables"]], "bool (rclpy.parameter.parameter.type attribute)": [[8, "rclpy.parameter.Parameter.Type.BOOL"]], "bool_array (rclpy.parameter.parameter.type attribute)": [[8, "rclpy.parameter.Parameter.Type.BOOL_ARRAY"]], "byte_array (rclpy.parameter.parameter.type attribute)": [[8, "rclpy.parameter.Parameter.Type.BYTE_ARRAY"]], "double (rclpy.parameter.parameter.type attribute)": [[8, "rclpy.parameter.Parameter.Type.DOUBLE"]], "double_array (rclpy.parameter.parameter.type attribute)": [[8, "rclpy.parameter.Parameter.Type.DOUBLE_ARRAY"]], "integer (rclpy.parameter.parameter.type attribute)": [[8, "rclpy.parameter.Parameter.Type.INTEGER"]], "integer_array (rclpy.parameter.parameter.type attribute)": [[8, "rclpy.parameter.Parameter.Type.INTEGER_ARRAY"]], "not_set (rclpy.parameter.parameter.type attribute)": [[8, "rclpy.parameter.Parameter.Type.NOT_SET"]], "parameter (class in rclpy.parameter)": [[8, "rclpy.parameter.Parameter"]], "parameter.type (class in rclpy.parameter)": [[8, "rclpy.parameter.Parameter.Type"]], "parameterservice (class in rclpy.parameter_service)": [[8, "rclpy.parameter_service.ParameterService"]], "string (rclpy.parameter.parameter.type attribute)": [[8, "rclpy.parameter.Parameter.Type.STRING"]], "string_array (rclpy.parameter.parameter.type attribute)": [[8, "rclpy.parameter.Parameter.Type.STRING_ARRAY"]], "check() (rclpy.parameter.parameter.type method)": [[8, "rclpy.parameter.Parameter.Type.check"]], "from_parameter_msg() (rclpy.parameter.parameter class method)": [[8, "rclpy.parameter.Parameter.from_parameter_msg"]], "from_parameter_value() (rclpy.parameter.parameter.type class method)": [[8, "rclpy.parameter.Parameter.Type.from_parameter_value"]], "get_parameter_value() (rclpy.parameter.parameter method)": [[8, "rclpy.parameter.Parameter.get_parameter_value"]], "name (rclpy.parameter.parameter property)": [[8, "rclpy.parameter.Parameter.name"]], "parameter_value_to_python() (in module rclpy.parameter)": [[8, "rclpy.parameter.parameter_value_to_python"]], "rclpy.parameter": [[8, "module-rclpy.parameter"]], "rclpy.parameter_service": [[8, "module-rclpy.parameter_service"]], "to_parameter_msg() (rclpy.parameter.parameter method)": [[8, "rclpy.parameter.Parameter.to_parameter_msg"]], "type_ (rclpy.parameter.parameter property)": [[8, "rclpy.parameter.Parameter.type_"]], "value (rclpy.parameter.parameter property)": [[8, "rclpy.parameter.Parameter.value"]], "action_status_default (rclpy.qos.qospresetprofiles attribute)": [[9, "rclpy.qos.QoSPresetProfiles.ACTION_STATUS_DEFAULT"]], "automatic (rclpy.qos.livelinesspolicy attribute)": [[9, "rclpy.qos.LivelinessPolicy.AUTOMATIC"]], "avoid_ros_namespace_conventions (rclpy.qos.qospolicykind attribute)": [[9, "rclpy.qos.QoSPolicyKind.AVOID_ROS_NAMESPACE_CONVENTIONS"]], "best_effort (rclpy.qos.reliabilitypolicy attribute)": [[9, "rclpy.qos.ReliabilityPolicy.BEST_EFFORT"]], "deadline (rclpy.qos.qospolicykind attribute)": [[9, "rclpy.qos.QoSPolicyKind.DEADLINE"]], "depth (rclpy.qos.qospolicykind attribute)": [[9, "rclpy.qos.QoSPolicyKind.DEPTH"]], "durability (rclpy.qos.qospolicykind attribute)": [[9, "rclpy.qos.QoSPolicyKind.DURABILITY"]], "durabilitypolicy (class in rclpy.qos)": [[9, "rclpy.qos.DurabilityPolicy"]], "history (rclpy.qos.qospolicykind attribute)": [[9, "rclpy.qos.QoSPolicyKind.HISTORY"]], "historypolicy (class in rclpy.qos)": [[9, "rclpy.qos.HistoryPolicy"]], "invalid (rclpy.qos.qospolicykind attribute)": [[9, "rclpy.qos.QoSPolicyKind.INVALID"]], "invalidqosprofileexception": [[9, "rclpy.qos.InvalidQoSProfileException"]], "keep_all (rclpy.qos.historypolicy attribute)": [[9, "rclpy.qos.HistoryPolicy.KEEP_ALL"]], "keep_last (rclpy.qos.historypolicy attribute)": [[9, "rclpy.qos.HistoryPolicy.KEEP_LAST"]], "lifespan (rclpy.qos.qospolicykind attribute)": [[9, "rclpy.qos.QoSPolicyKind.LIFESPAN"]], "liveliness (rclpy.qos.qospolicykind attribute)": [[9, "rclpy.qos.QoSPolicyKind.LIVELINESS"]], "liveliness_lease_duration (rclpy.qos.qospolicykind attribute)": [[9, "rclpy.qos.QoSPolicyKind.LIVELINESS_LEASE_DURATION"]], "livelinesspolicy (class in rclpy.qos)": [[9, "rclpy.qos.LivelinessPolicy"]], "manual_by_topic (rclpy.qos.livelinesspolicy attribute)": [[9, "rclpy.qos.LivelinessPolicy.MANUAL_BY_TOPIC"]], "parameters (rclpy.qos.qospresetprofiles attribute)": [[9, "rclpy.qos.QoSPresetProfiles.PARAMETERS"]], "parameter_events (rclpy.qos.qospresetprofiles attribute)": [[9, "rclpy.qos.QoSPresetProfiles.PARAMETER_EVENTS"]], "qosdurabilitypolicy (in module rclpy.qos)": [[9, "rclpy.qos.QoSDurabilityPolicy"]], "qoshistorypolicy (in module rclpy.qos)": [[9, "rclpy.qos.QoSHistoryPolicy"]], "qoslivelinesspolicy (in module rclpy.qos)": [[9, "rclpy.qos.QoSLivelinessPolicy"]], "qospolicyenum (class in rclpy.qos)": [[9, "rclpy.qos.QoSPolicyEnum"]], "qospolicykind (class in rclpy.qos)": [[9, "rclpy.qos.QoSPolicyKind"]], "qospresetprofiles (class in rclpy.qos)": [[9, "rclpy.qos.QoSPresetProfiles"]], "qosprofile (class in rclpy.qos)": [[9, "rclpy.qos.QoSProfile"]], "qosreliabilitypolicy (in module rclpy.qos)": [[9, "rclpy.qos.QoSReliabilityPolicy"]], "reliability (rclpy.qos.qospolicykind attribute)": [[9, "rclpy.qos.QoSPolicyKind.RELIABILITY"]], "reliable (rclpy.qos.reliabilitypolicy attribute)": [[9, "rclpy.qos.ReliabilityPolicy.RELIABLE"]], "rmw_qos_policy_durability_system_default (rclpy.qos.durabilitypolicy attribute)": [[9, "rclpy.qos.DurabilityPolicy.RMW_QOS_POLICY_DURABILITY_SYSTEM_DEFAULT"]], "rmw_qos_policy_durability_transient_local (rclpy.qos.durabilitypolicy attribute)": [[9, "rclpy.qos.DurabilityPolicy.RMW_QOS_POLICY_DURABILITY_TRANSIENT_LOCAL"]], "rmw_qos_policy_durability_unknown (rclpy.qos.durabilitypolicy attribute)": [[9, "rclpy.qos.DurabilityPolicy.RMW_QOS_POLICY_DURABILITY_UNKNOWN"]], "rmw_qos_policy_durability_unknown (rclpy.qos.livelinesspolicy attribute)": [[9, "rclpy.qos.LivelinessPolicy.RMW_QOS_POLICY_DURABILITY_UNKNOWN"]], "rmw_qos_policy_durability_volatile (rclpy.qos.durabilitypolicy attribute)": [[9, "rclpy.qos.DurabilityPolicy.RMW_QOS_POLICY_DURABILITY_VOLATILE"]], "rmw_qos_policy_history_keep_all (rclpy.qos.historypolicy attribute)": [[9, "rclpy.qos.HistoryPolicy.RMW_QOS_POLICY_HISTORY_KEEP_ALL"]], "rmw_qos_policy_history_keep_last (rclpy.qos.historypolicy attribute)": [[9, "rclpy.qos.HistoryPolicy.RMW_QOS_POLICY_HISTORY_KEEP_LAST"]], "rmw_qos_policy_history_system_default (rclpy.qos.historypolicy attribute)": [[9, "rclpy.qos.HistoryPolicy.RMW_QOS_POLICY_HISTORY_SYSTEM_DEFAULT"]], "rmw_qos_policy_history_unknown (rclpy.qos.historypolicy attribute)": [[9, "rclpy.qos.HistoryPolicy.RMW_QOS_POLICY_HISTORY_UNKNOWN"]], "rmw_qos_policy_liveliness_automatic (rclpy.qos.livelinesspolicy attribute)": [[9, "rclpy.qos.LivelinessPolicy.RMW_QOS_POLICY_LIVELINESS_AUTOMATIC"]], "rmw_qos_policy_liveliness_manual_by_topic (rclpy.qos.livelinesspolicy attribute)": [[9, "rclpy.qos.LivelinessPolicy.RMW_QOS_POLICY_LIVELINESS_MANUAL_BY_TOPIC"]], "rmw_qos_policy_liveliness_system_default (rclpy.qos.livelinesspolicy attribute)": [[9, "rclpy.qos.LivelinessPolicy.RMW_QOS_POLICY_LIVELINESS_SYSTEM_DEFAULT"]], "rmw_qos_policy_reliability_best_effort (rclpy.qos.reliabilitypolicy attribute)": [[9, "rclpy.qos.ReliabilityPolicy.RMW_QOS_POLICY_RELIABILITY_BEST_EFFORT"]], "rmw_qos_policy_reliability_reliable (rclpy.qos.reliabilitypolicy attribute)": [[9, "rclpy.qos.ReliabilityPolicy.RMW_QOS_POLICY_RELIABILITY_RELIABLE"]], "rmw_qos_policy_reliability_system_default (rclpy.qos.reliabilitypolicy attribute)": [[9, "rclpy.qos.ReliabilityPolicy.RMW_QOS_POLICY_RELIABILITY_SYSTEM_DEFAULT"]], "rmw_qos_policy_reliability_unknown (rclpy.qos.reliabilitypolicy attribute)": [[9, "rclpy.qos.ReliabilityPolicy.RMW_QOS_POLICY_RELIABILITY_UNKNOWN"]], "reliabilitypolicy (class in rclpy.qos)": [[9, "rclpy.qos.ReliabilityPolicy"]], "sensor_data (rclpy.qos.qospresetprofiles attribute)": [[9, "rclpy.qos.QoSPresetProfiles.SENSOR_DATA"]], "services_default (rclpy.qos.qospresetprofiles attribute)": [[9, "rclpy.qos.QoSPresetProfiles.SERVICES_DEFAULT"]], "system_default (rclpy.qos.durabilitypolicy attribute)": [[9, "rclpy.qos.DurabilityPolicy.SYSTEM_DEFAULT"]], "system_default (rclpy.qos.historypolicy attribute)": [[9, "rclpy.qos.HistoryPolicy.SYSTEM_DEFAULT"]], "system_default (rclpy.qos.livelinesspolicy attribute)": [[9, "rclpy.qos.LivelinessPolicy.SYSTEM_DEFAULT"]], "system_default (rclpy.qos.qospresetprofiles attribute)": [[9, "rclpy.qos.QoSPresetProfiles.SYSTEM_DEFAULT"]], "system_default (rclpy.qos.reliabilitypolicy attribute)": [[9, "rclpy.qos.ReliabilityPolicy.SYSTEM_DEFAULT"]], "transient_local (rclpy.qos.durabilitypolicy attribute)": [[9, "rclpy.qos.DurabilityPolicy.TRANSIENT_LOCAL"]], "unknown (rclpy.qos.durabilitypolicy attribute)": [[9, "rclpy.qos.DurabilityPolicy.UNKNOWN"]], "unknown (rclpy.qos.historypolicy attribute)": [[9, "rclpy.qos.HistoryPolicy.UNKNOWN"]], "unknown (rclpy.qos.livelinesspolicy attribute)": [[9, "rclpy.qos.LivelinessPolicy.UNKNOWN"]], "unknown (rclpy.qos.qospresetprofiles attribute)": [[9, "rclpy.qos.QoSPresetProfiles.UNKNOWN"]], "unknown (rclpy.qos.reliabilitypolicy attribute)": [[9, "rclpy.qos.ReliabilityPolicy.UNKNOWN"]], "volatile (rclpy.qos.durabilitypolicy attribute)": [[9, "rclpy.qos.DurabilityPolicy.VOLATILE"]], "avoid_ros_namespace_conventions (rclpy.qos.qosprofile property)": [[9, "rclpy.qos.QoSProfile.avoid_ros_namespace_conventions"]], "deadline (rclpy.qos.qosprofile property)": [[9, "rclpy.qos.QoSProfile.deadline"]], "depth (rclpy.qos.qosprofile property)": [[9, "rclpy.qos.QoSProfile.depth"]], "durability (rclpy.qos.qosprofile property)": [[9, "rclpy.qos.QoSProfile.durability"]], "get_c_qos_profile() (rclpy.qos.qosprofile method)": [[9, "rclpy.qos.QoSProfile.get_c_qos_profile"]], "get_from_short_key() (rclpy.qos.qospolicyenum class method)": [[9, "rclpy.qos.QoSPolicyEnum.get_from_short_key"]], "get_from_short_key() (rclpy.qos.qospresetprofiles class method)": [[9, "rclpy.qos.QoSPresetProfiles.get_from_short_key"]], "history (rclpy.qos.qosprofile property)": [[9, "rclpy.qos.QoSProfile.history"]], "lifespan (rclpy.qos.qosprofile property)": [[9, "rclpy.qos.QoSProfile.lifespan"]], "liveliness (rclpy.qos.qosprofile property)": [[9, "rclpy.qos.QoSProfile.liveliness"]], "liveliness_lease_duration (rclpy.qos.qosprofile property)": [[9, "rclpy.qos.QoSProfile.liveliness_lease_duration"]], "qos_check_compatible() (in module rclpy.qos)": [[9, "rclpy.qos.qos_check_compatible"]], "qos_policy_name_from_kind() (in module rclpy.qos)": [[9, "rclpy.qos.qos_policy_name_from_kind"]], "qos_profile_action_status_default (in module rclpy.qos)": [[9, "rclpy.qos.qos_profile_action_status_default"]], "qos_profile_parameter_events (in module rclpy.qos)": [[9, "rclpy.qos.qos_profile_parameter_events"]], "qos_profile_parameters (in module rclpy.qos)": [[9, "rclpy.qos.qos_profile_parameters"]], "qos_profile_sensor_data (in module rclpy.qos)": [[9, "rclpy.qos.qos_profile_sensor_data"]], "qos_profile_services_default (in module rclpy.qos)": [[9, "rclpy.qos.qos_profile_services_default"]], "qos_profile_system_default (in module rclpy.qos)": [[9, "rclpy.qos.qos_profile_system_default"]], "qos_profile_unknown (in module rclpy.qos)": [[9, "rclpy.qos.qos_profile_unknown"]], "rclpy.qos": [[9, "module-rclpy.qos"]], "reliability (rclpy.qos.qosprofile property)": [[9, "rclpy.qos.QoSProfile.reliability"]], "short_key (rclpy.qos.qospolicyenum property)": [[9, "rclpy.qos.QoSPolicyEnum.short_key"]], "short_keys() (rclpy.qos.qospolicyenum class method)": [[9, "rclpy.qos.QoSPolicyEnum.short_keys"]], "short_keys() (rclpy.qos.qospresetprofiles class method)": [[9, "rclpy.qos.QoSPresetProfiles.short_keys"]], "client (class in rclpy.client)": [[10, "rclpy.client.Client"]], "service (class in rclpy.service)": [[10, "rclpy.service.Service"]], "call() (rclpy.client.client method)": [[10, "rclpy.client.Client.call"]], "call_async() (rclpy.client.client method)": [[10, "rclpy.client.Client.call_async"]], "destroy() (rclpy.client.client method)": [[10, "rclpy.client.Client.destroy"]], "destroy() (rclpy.service.service method)": [[10, "rclpy.service.Service.destroy"]], "get_pending_request() (rclpy.client.client method)": [[10, "rclpy.client.Client.get_pending_request"]], "handle (rclpy.client.client property)": [[10, "rclpy.client.Client.handle"]], "handle (rclpy.service.service property)": [[10, "rclpy.service.Service.handle"]], "rclpy.client": [[10, "module-rclpy.client"]], "rclpy.service": [[10, "module-rclpy.service"]], "remove_pending_request() (rclpy.client.client method)": [[10, "rclpy.client.Client.remove_pending_request"]], "send_response() (rclpy.service.service method)": [[10, "rclpy.service.Service.send_response"]], "service_is_ready() (rclpy.client.client method)": [[10, "rclpy.client.Client.service_is_ready"]], "wait_for_service() (rclpy.client.client method)": [[10, "rclpy.client.Client.wait_for_service"]], "rate (class in rclpy.timer)": [[11, "rclpy.timer.Rate"]], "timer (class in rclpy.timer)": [[11, "rclpy.timer.Timer"]], "cancel() (rclpy.timer.timer method)": [[11, "rclpy.timer.Timer.cancel"]], "clock (rclpy.timer.timer property)": [[11, "rclpy.timer.Timer.clock"]], "destroy() (rclpy.timer.rate method)": [[11, "rclpy.timer.Rate.destroy"]], "destroy() (rclpy.timer.timer method)": [[11, "rclpy.timer.Timer.destroy"]], "handle (rclpy.timer.timer property)": [[11, "rclpy.timer.Timer.handle"]], "is_canceled() (rclpy.timer.timer method)": [[11, "rclpy.timer.Timer.is_canceled"]], "is_ready() (rclpy.timer.timer method)": [[11, "rclpy.timer.Timer.is_ready"]], "rclpy.timer": [[11, "module-rclpy.timer"]], "reset() (rclpy.timer.timer method)": [[11, "rclpy.timer.Timer.reset"]], "sleep() (rclpy.timer.rate method)": [[11, "rclpy.timer.Rate.sleep"]], "time_since_last_call() (rclpy.timer.timer method)": [[11, "rclpy.timer.Timer.time_since_last_call"]], "time_until_next_call() (rclpy.timer.timer method)": [[11, "rclpy.timer.Timer.time_until_next_call"]], "timer_period_ns (rclpy.timer.timer property)": [[11, "rclpy.timer.Timer.timer_period_ns"]], "publisher (class in rclpy.publisher)": [[12, "rclpy.publisher.Publisher"]], "subscription (class in rclpy.subscription)": [[12, "rclpy.subscription.Subscription"]], "assert_liveliness() (rclpy.publisher.publisher method)": [[12, "rclpy.publisher.Publisher.assert_liveliness"]], "destroy() (rclpy.publisher.publisher method)": [[12, "rclpy.publisher.Publisher.destroy"]], "destroy() (rclpy.subscription.subscription method)": [[12, "rclpy.subscription.Subscription.destroy"]], "get_subscription_count() (rclpy.publisher.publisher method)": [[12, "rclpy.publisher.Publisher.get_subscription_count"]], "handle (rclpy.publisher.publisher property)": [[12, "rclpy.publisher.Publisher.handle"]], "handle (rclpy.subscription.subscription property)": [[12, "rclpy.subscription.Subscription.handle"]], "publish() (rclpy.publisher.publisher method)": [[12, "rclpy.publisher.Publisher.publish"]], "rclpy.publisher": [[12, "module-rclpy.publisher"]], "rclpy.subscription": [[12, "module-rclpy.subscription"]], "topic_name (rclpy.publisher.publisher property)": [[12, "rclpy.publisher.Publisher.topic_name"]], "topic_name (rclpy.subscription.subscription property)": [[12, "rclpy.subscription.Subscription.topic_name"]], "wait_for_all_acked() (rclpy.publisher.publisher method)": [[12, "rclpy.publisher.Publisher.wait_for_all_acked"]], "get_available_rmw_implementations() (in module rclpy.utilities)": [[13, "rclpy.utilities.get_available_rmw_implementations"]], "get_default_context() (in module rclpy.utilities)": [[13, "rclpy.utilities.get_default_context"]], "get_rmw_implementation_identifier() (in module rclpy.utilities)": [[13, "rclpy.utilities.get_rmw_implementation_identifier"]], "ok() (in module rclpy.utilities)": [[13, "rclpy.utilities.ok"]], "rclpy.utilities": [[13, "module-rclpy.utilities"]], "remove_ros_args() (in module rclpy.utilities)": [[13, "rclpy.utilities.remove_ros_args"]], "shutdown() (in module rclpy.utilities)": [[13, "rclpy.utilities.shutdown"]], "timeout_sec_to_nsec() (in module rclpy.utilities)": [[13, "rclpy.utilities.timeout_sec_to_nsec"]], "try_shutdown() (in module rclpy.utilities)": [[13, "rclpy.utilities.try_shutdown"]]}})